#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pg.LetsMeet.Dataverse.Context
{
	
	
	[System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/crm/2011/Contracts")]
	[Microsoft.Xrm.Sdk.Client.RequestProxyAttribute("CommitToGit")]
	public partial class CommitToGitRequest : Microsoft.Xrm.Sdk.OrganizationRequest
	{
		
		public static class Fields
		{
			public const string SolutionUniqueName = "SolutionUniqueName";
			public const string CommitMessage = "CommitMessage";
		}
		
		public const string ActionLogicalName = "CommitToGit";
		
		public string SolutionUniqueName
		{
			get
			{
				if (this.Parameters.Contains("SolutionUniqueName"))
				{
					return ((string)(this.Parameters["SolutionUniqueName"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["SolutionUniqueName"] = value;
			}
		}
		
		public string CommitMessage
		{
			get
			{
				if (this.Parameters.Contains("CommitMessage"))
				{
					return ((string)(this.Parameters["CommitMessage"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["CommitMessage"] = value;
			}
		}
		
		public CommitToGitRequest()
		{
			this.RequestName = "CommitToGit";
			this.SolutionUniqueName = default(string);
			this.CommitMessage = default(string);
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/crm/2011/Contracts")]
	[Microsoft.Xrm.Sdk.Client.ResponseProxyAttribute("CommitToGit")]
	public partial class CommitToGitResponse : Microsoft.Xrm.Sdk.OrganizationResponse
	{
		
		public static class Fields
		{
			public const string CommitId = "CommitId";
			public const string Type = "Type";
		}
		
		public const string ActionLogicalName = "CommitToGit";
		
		public CommitToGitResponse()
		{
		}
		
		public string CommitId
		{
			get
			{
				if (this.Results.Contains("CommitId"))
				{
					return ((string)(this.Results["CommitId"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Results["CommitId"] = value;
			}
		}
		
		public int Type
		{
			get
			{
				if (this.Results.Contains("Type"))
				{
					return ((int)(this.Results["Type"]));
				}
				else
				{
					return default(int);
				}
			}
			set
			{
				this.Results["Type"] = value;
			}
		}
	}
}
#pragma warning restore CS1591
