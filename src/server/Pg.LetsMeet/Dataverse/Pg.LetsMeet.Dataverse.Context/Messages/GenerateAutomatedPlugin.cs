#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pg.LetsMeet.Dataverse.Context
{
	
	
	[System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/xrm/2011/new/")]
	[Microsoft.Xrm.Sdk.Client.RequestProxyAttribute("GenerateAutomatedPlugin")]
	public partial class GenerateAutomatedPluginRequest : Microsoft.Xrm.Sdk.OrganizationRequest
	{
		
		public static class Fields
		{
			public const string Context = "Context";
			public const string Expression = "Expression";
			public const string EntityLogicalName = "EntityLogicalName";
			public const string Stage = "Stage";
			public const string Name = "Name";
			public const string SolutionUniqueName = "SolutionUniqueName";
			public const string MessageName = "MessageName";
		}
		
		public const string ActionLogicalName = "GenerateAutomatedPlugin";
		
		public string Context
		{
			get
			{
				if (this.Parameters.Contains("Context"))
				{
					return ((string)(this.Parameters["Context"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["Context"] = value;
			}
		}
		
		public string Expression
		{
			get
			{
				if (this.Parameters.Contains("Expression"))
				{
					return ((string)(this.Parameters["Expression"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["Expression"] = value;
			}
		}
		
		public string EntityLogicalName
		{
			get
			{
				if (this.Parameters.Contains("EntityLogicalName"))
				{
					return ((string)(this.Parameters["EntityLogicalName"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["EntityLogicalName"] = value;
			}
		}
		
		public int Stage
		{
			get
			{
				if (this.Parameters.Contains("Stage"))
				{
					return ((int)(this.Parameters["Stage"]));
				}
				else
				{
					return default(int);
				}
			}
			set
			{
				this.Parameters["Stage"] = value;
			}
		}
		
		public string Name
		{
			get
			{
				if (this.Parameters.Contains("Name"))
				{
					return ((string)(this.Parameters["Name"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["Name"] = value;
			}
		}
		
		public string SolutionUniqueName
		{
			get
			{
				if (this.Parameters.Contains("SolutionUniqueName"))
				{
					return ((string)(this.Parameters["SolutionUniqueName"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["SolutionUniqueName"] = value;
			}
		}
		
		public string MessageName
		{
			get
			{
				if (this.Parameters.Contains("MessageName"))
				{
					return ((string)(this.Parameters["MessageName"]));
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.Parameters["MessageName"] = value;
			}
		}
		
		public GenerateAutomatedPluginRequest()
		{
			this.RequestName = "GenerateAutomatedPlugin";
			this.Expression = default(string);
			this.EntityLogicalName = default(string);
			this.Stage = default(int);
			this.Name = default(string);
			this.MessageName = default(string);
		}
	}
	
	[System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/xrm/2011/new/")]
	[Microsoft.Xrm.Sdk.Client.ResponseProxyAttribute("GenerateAutomatedPlugin")]
	public partial class GenerateAutomatedPluginResponse : Microsoft.Xrm.Sdk.OrganizationResponse
	{
		
		public static class Fields
		{
			public const string FxExpressionId = "FxExpressionId";
			public const string pluginid = "pluginid";
		}
		
		public const string ActionLogicalName = "GenerateAutomatedPlugin";
		
		public GenerateAutomatedPluginResponse()
		{
		}
		
		public System.Guid FxExpressionId
		{
			get
			{
				if (this.Results.Contains("FxExpressionId"))
				{
					return ((System.Guid)(this.Results["FxExpressionId"]));
				}
				else
				{
					return default(System.Guid);
				}
			}
			set
			{
				this.Results["FxExpressionId"] = value;
			}
		}
		
		public System.Guid pluginid
		{
			get
			{
				if (this.Results.Contains("pluginid"))
				{
					return ((System.Guid)(this.Results["pluginid"]));
				}
				else
				{
					return default(System.Guid);
				}
			}
			set
			{
				this.Results["pluginid"] = value;
			}
		}
	}
}
#pragma warning restore CS1591
